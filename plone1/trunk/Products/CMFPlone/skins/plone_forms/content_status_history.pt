<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
      lang="en-US"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">
<head metal:fill-slot="head_slot">
    <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate, post-check=0, pre-check=0')" />
</head>
<body>

<!-- 
     NOTE: This form does two things.  It will allow you to publish multiple files (recursively) 
     and it will allow for you to publish a specific piece of content.  This flexibility comes with
     some minor complexity.  How we tell is if we have a list of 'ids' in the REQUEST to be published 
-->

<div metal:fill-slot="main"
      tal:condition="here/rejectAnonymous"
      tal:define="errors request/errors | nothing">

    <h1 i18n:translate="heading_publishing_process">Publishing process</h1>
    
    <p i18n:translate="description_publishing_process">
    An item's status (also called its review state) determines who can see it.
    A <strong>private</strong> item can only be viewed by its Owner and by the site
    management. Only <strong>published</strong> items are available to the general
    member base and anonymous visitors. To make an item published, it
    has to be reviewed by one of the site's Reviewers. You can request
    that an item be reviewed by <strong>submitting it for review</strong>. <br />
        
    Another way to control the visibility of an item is with its <strong>effective
    date</strong>. An item is not publicly available before its effective date,
    <em>even if its status is <strong>published</strong></em>.
    </p>

    
    <div class="group" tal:condition="not: request/ids|nothing">
        <metal:block tal:define="global review_state python:here.portal_workflow.getInfoFor(here, 'review_state');
                                 global review_history python:here.portal_workflow.getInfoFor(here, 'review_history');" />
        <span class="legend" i18n:translate="legend_status">Status</span>
    
        <div class="row">
            <div class="label" i18n:translate="label_status">Status</div>
            <div class="field"
                 tal:define="effective_date python:test(here.effective_date, here.effective_date, '');
                             expiration_date python:test(here.expiration_date, here.expiration_date, '')">
        <span i18n:translate="label_current_state">
            This item is currently in the 
                <strong i18n:name="review_state">
                    <span i18n:translate="" tal:content="review_state">
                    review_state
                    </span>
                </strong>
            state
        </span>
        
        <tal:block tal:condition="python: review_state == 'published'"
	               tal:define="eff_date here/effective_date | nothing;
	                           exp_date here/expiration_date | nothing;
	                           now here/ZopeTime;
	                           before python:eff_date and (eff_date > now);
	                           after python:exp_date and (exp_date < now);
	                           effective python:not(before or after);">
	        <span tal:condition="effective"
                      i18n:translate="status_is_effective">and <strong>is effective</strong>.</span>
	        <span tal:condition="before"
                      i18n:translate="status_not_yet_effective">but is <strong>not yet</strong> effective.</span>
	        <span tal:condition="after"
                      i18n:translate="status_no_longer_effective">but is <strong>no longer</strong> effective.</span>
	    </tal:block>
	        </div>
        </div>
    
    </div>

    
    <form class="group"
          id="edit_form"
          name="edit_form" 
          method="post" 
          action="content_status_modify"
          tal:define="self_publish string:${request/URL1}/portal_form/${template/getId}"
          tal:attributes="action python:test(request.get('ids', None), 'folder_publish', self_publish)" >
        
        <span class="legend" i18n:translate="legend_publishing_details">Publishing Details</span>

        <div class="row" tal:condition="request/ids|nothing">
            <div class="label" i18n:translate="label_affected_content">Affected content</div>
            <div class="field"
                 tal:define="physical_path python:'/'.join(here.getPhysicalPath());
                             dummy python:request.set('ids_checked', 1);
                             containedobjects python:[getattr(here, id) for id in request.get('ids', []) if id in here.objectIds()];
                             batch containedobjects;
                             global folders_in_publishing python:[o.getId() for o in batch if o.isPrincipiaFolderish];"
                 tal:condition="batch">
                <table metal:use-macro="here/folder_contents/macros/folder_listing">
                </table>
            </div>
        </div>

        <div class="row"
	     tal:condition="folders_in_publishing|nothing">
	   <div class="label">
	     <span i18n:translate="label_subfolders">Subfolders</span>
	     <div id="include_subfolders_help" 
	          i18n:translate="help_include_subfolders"
	          class="help" 
	          style="visibility:hidden">
	          If checked, Plone will attempt to publish all content in subfolders.
	     </div>	
	   </div>
	   <div class="field">
	     <input type="checkbox"
	            class="noborder"
	            id="include_subfolders"
	            name="include_subfolders"
	            tabindex="" 
	            onfocus="formtooltip('include_subfolders_help',1)" 
	            onblur="formtooltip('include_subfolders_help',0)" 
	            checked="checked" 
              tal:attributes="tabindex tabindex/next;"
              />
	     <label for="include_subfolders" i18n:translate="label_include_subfolders">Include subfolders</label>
           </div>
   	</div>

        <div class="row" tal:define="error errors/effective_date | nothing;">
            <div class="label">
              <span i18n:translate="label_effective_date">Effective Date</span>
                <div id="effective_date_help"
                     i18n:translate="help_effective_date" 
                     class="help" 
                     style="visibility:hidden">
                The date when the item will be visible when it's published. This way, you can 
                publish a item in advance, but it will not be visible before this date.  If no date is selected
                the item will be effective immediately.
                </div>
            </div>
            <div class="field">
                <div tal:define="inputname  string:effective_date; 
                                 formname   string:edit_form;
                                 inputvalue python:test(here.EffectiveDate() and here.EffectiveDate()!='None', here.EffectiveDate(), request.get('effective_date', ''));
                                 onfocus string:formtooltip('effective_date_help',1);
                                 onblur string:formtooltip('effective_date_help',0);
                                 tabindex tabindex/next;"
                     tal:attributes="class python:test(error, 'field error', 'field')">
                  <div tal:replace="error" />
                  <div metal:use-macro="here/calendar_slot/macros/calendarDatePickerBox">
                    calendar pop-up
                  </div>
                </div>
            </div>
        </div>

        <div class="row" tal:define="error errors/expiration_date | nothing;">
            <div class="label">
              <span i18n:translate="label_expiration_date">Expiration Date</span>
                <div id="expiration_date_help"
                     i18n:translate="help_expiration_date" 
                     class="help" 
                     style="visibility:hidden">
                The date when the item expires. This will automatically make the item
                invisible for others at the given date. If no date is chosen, it will never expire.
                </div>
            </div>
            <div class="field">
                <div tal:define="inputname  string:expiration_date; 
                                 formname   string:edit_form;
                                 inputvalue python:test(here.ExpirationDate() and here.ExpirationDate()!='None', here.ExpirationDate(), request.get('expiration_date', ''));
                                 onfocus string:formtooltip('expiration_date_help',1);
                                 onblur string:formtooltip('expiration_date_help',0);
                                 tabindex tabindex/next;"
                     tal:attributes="class python:test(error, 'field error', 'field')">
                  <div tal:replace="error" />
                  <div metal:use-macro="here/calendar_slot/macros/calendarDatePickerBox">
                    calendar pop-up
                  </div>
                </div>
            </div>
        </div>
    
        <div class="row">
            <div class="label">
            <span i18n:translate="label_comments">Comments</span>
                <div id="publishing_comments_help"
                     i18n:translate="help_publishing_comments" 
                     class="help" 
                     style="visibility:hidden">
                Enter a short description or some comments to be added
                to the comments field in the publishing history. If multiple
                items are selected, this comment will be attached to all of
                them.
                </div>
            </div>
            <div class="field">
                <textarea id="comment" 
                          name="comment" 
                          cols="60" 
                          rows="5"
                          tabindex=""
                          onfocus="formtooltip('publishing_comments_help',1)" 
                          onblur="formtooltip('publishing_comments_help',0)"
                          tal:attributes="tabindex tabindex/next;" 
                          tal:content="request/comment|nothing"
                          ></textarea>
            </div>
        </div>

        <div class="row">
            <div class="label">
            <span i18n:translate="label_change_status">Change State</span>
                <div id="change_status_help"
                     i18n:translate="help_change_status"
                     class="help"
                     style="visibility:hidden">
                Select the new state for the selected items.
                </div>
            </div>
    
            <div class="field"
                 tal:define="tabindex tabindex/next;
                             error_workflow_action errors/workflow_action|nothing;
                             objs request/ids|nothing;
                             target python:test(objs, objs, here);"
                 tal:attributes="class python:test(error_workflow_action, 'field error', 'field')">
                 
                <div tal:condition="error_workflow_action">
                    <tal:block i18n:translate="" content="error_workflow_action">Error</tal:block>
                    <br />
                </div>
                
                <metal:block tal:define="global transitions python:here.portal_workflow.getTransitionsFor(target, here)"
                             tal:repeat="transition transitions">
                    <input class="noborder"
                           id=""
                           type="radio"
                           name="workflow_action" 
                           title="" 
                           value=""
                           onfocus="formtooltip('change_status_help',1)" 
                           onblur="formtooltip('change_status_help',0)" 
                           i18n:attributes="title"
                           tal:attributes="value transition/id;
                                           id    transition/id;
                                           title transition/name;
                                           checked python:test(transition.get('id') == request.get('workflow_action', ''), 'checked', None)" />
                    <label for=""
                           i18n:translate=""
                           tal:attributes="for transition/id;"
                           tal:content="transition/name"
                           >Transition Name</label>
                    <br />
                </metal:block>

            </div>
            
        </div>
        
        <div class="row">
            <div class="label">&nbsp;</div>
    
            <div class="field">
                <input class="context"
                       type="submit"
                       name="workflow_action_submit" 
                       value="Save"
                       i18n:attributes="value" 
                       tal:attributes="tabindex tabindex/next;" />
            </div>
            
        </div>
        

        <span tal:replace="nothing">
        ##### HIDDEN VARIABLES FOR THE FORM_TOOL -- CUT AND PASTE THESE INTO YOUR FORM ####
        </span>
        <input type="hidden" name="form_submitted" value="1" tal:attributes="value template/id" />

    </form>

    <div tal:condition="not: request/ids|nothing">
        
        <table class="listing nosort" tal:condition="python:[review for review in review_history if review.get('action','')]">
            
            <tr>
                <th i18n:translate="listingheader_action">Action</th>
                <th i18n:translate="listingheader_performed_by">Performed&nbsp;by</th>
                <th i18n:translate="listingheader_date_and_time">Date&nbsp;and&nbsp;Time</th>
                <th i18n:translate="listingheader_comment">Comment</th>
            </tr>

            <metal:block tal:repeat="items review_history">
            <tr tal:define="review_history python: here.reverseList(review_history);
	                        global odd repeat/items/odd; global rhComments items/comments;"
                tal:attributes="class python:test(odd, 'even', 'odd')"
                tal:condition="items/action">
                <td i18n:translate=""> 
                <span tal:replace="items/action" /> 
                </td>
            
                <td>
                <a href="/Members/runyaga"
                     tal:attributes="href python:container.portal_membership.getHomeUrl(items.get('actor'), '')"
                     tal:content="items/actor">
                  runyaga
                </a> 
                </td>
                
                <td>
                  <span tal:replace="python: items['time'].strftime(container.portal_properties.site_properties.localTimeFormat)" />
                  <span tal:condition="items/effective_date|nothing">
                  (<span i18n:translate="label_publishing_effective" tal:omit-tag="">effective</span>: 
                  <span tal:replace="python: items['effective_date'].strftime(container.portal_properties.site_properties.localTimeFormat)"></span>)
                  </span>
                </td>
              
                <td>
                    <span tal:condition="rhComments">
                        <span tal:replace="rhComments"> some comments </span>
                    </span>

                    <span tal:condition="not: rhComments" i18n:translate="no_comments">
                    No comments.
                    </span>
                </td>
            </tr>
            </metal:block>
        </table>

    </div>

</div>
  
</body>
</html>

