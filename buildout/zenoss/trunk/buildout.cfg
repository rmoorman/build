[buildout]
extends = versions.cfg
versions = versions
parts = 
    env
    zope2
    instance1
    zopepy
    mysql
    mysql_install_db
    mysql-python
    gettext
    libtiff
    libjpeg
    pkgconfig
    fontconfig
    freetype
    libpng
    glib
    atk
    gtk
    pixman
    cairo
    pango
    rrdtool
eggs = 
    simplejson
    twisted
    uuid
#    mysql-python

[env]
recipe = gocept.recipe.env

[ports]
recipe = plone.recipe.command
command = 
    echo This buildout uses the following ports:
    echo Supervisor: ${ports:supervisor}
    echo Apache: ${ports:apache}
    echo MySQL: ${ports:mysql}
supervisor = 
apache = 12080
mysql = 3307

[zope2]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2install
recipe = plone.recipe.zope2install
fake-zope-eggs = true
additional-fake-eggs = 
    ZODB3
url = http://www.zope.org/Products/Zope/2.8.8/Zope-2.8.8-final.tgz

[instance1]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on
eggs = 
    ${buildout:eggs}
products = 
    ${buildout:directory}/products
extra-paths = ${rrdtool:location}/lib/python2.4/site-packages

[mysql]
recipe = zc.recipe.cmmi
url = http://mysql.mirrors.pair.com/Downloads/MySQL-5.1/mysql-5.1.34.tar.gz
environment = 
    PATH=${buildout:directory}/parts/mysql/bin:${env:PATH}

[mysql_install_db]
recipe = plone.recipe.command
command = 
    ${mysql:location}/bin/mysql_install_db --datadir=${mycnf:datadir}
    echo    
    echo After starting supervisord, you may want to run:
    echo ${buildout:directory}/parts/mysql/bin/mysqladmin -u root password 'new-password'
    echo
update-command = ${mysql_install_db:command}

[mycnf]
recipe = plone.recipe.command
command =
    echo
    echo These options are passed to mysqld_safe: ${mycnf:opt}
    echo
basedir=${mysql:location}
datadir=${buildout:directory}/var
pid=${mycnf:datadir}/mysql.pid
err = ${mycnf:datadir}/log/mysql.err
sock = ${mycnf:datadir}/mysql.sock
opt = --port=${ports:mysql} --pid-file=${mycnf:pid} --log-error=${mycnf:err} --basedir=${mycnf:basedir} --datadir=${mycnf:datadir} --socke
t=${mycnf:sock}

[mysql-env]
PATH = ${buildout:directory}/parts/mysql/bin:${env:PATH}

[mysql-python]
recipe = zc.recipe.egg:custom
environment = mysql-env

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy

[atk]
recipe = zc.recipe.cmmi
url = http://ftp.gnome.org/pub/GNOME/sources/atk/1.26/atk-1.26.0.tar.gz
extra_options = 
    CFLAGS=-I${gettext:location}/include
    LDFLAGS=-L${gettext:location}/lib
environment = 
    PKG_CONFIG_PATH=${glib:location}/lib/pkgconfig

[gtk]
recipe = plone.recipe.command
flags = CFLAGS="-I${gettext:location}/include -I${libtiff:location}/include -I${libjpeg:location}/include" LDFLAGS="-L${gettext:location}/lib -L${libtiff:location}/lib -L${libjpeg:location}/lib"
env = PKG_CONFIG_PATH=${glib:location}/lib/pkgconfig:${pango:location}/lib/pkgconfig:${atk:location}/lib/pkgconfig:${cairo:location}/lib/pkgconfig:${pixman:location}/lib/pkgconfig
command = 
    export ${gtk:env}
    cd ${buildout:directory}/tmp
    wget http://ftp.gnome.org/pub/gnome/sources/gtk+/2.16/gtk+-2.16.1.tar.gz
    tar zxvf gtk+-2.16.1.tar.gz
    cd gtk+-2.16.1
    ./configure ${gtk:flags} --prefix=${gtk:location} --without-libjpeg --without-libjasper
location = ${buildout:directory}/parts/gtk
update-command=${gtk:command}

[glib]
recipe = zc.recipe.cmmi
url = http://ftp.gnome.org/pub/gnome/sources/glib/2.20/glib-2.20.1.tar.gz
extra_options =
    CFLAGS=-I${gettext:location}/include
    LDFLAGS=-L${gettext:location}/lib
    PKG_CONFIG=${pkgconfig:location}/bin/pkg-config

[gettext]
recipe = hexagonit.recipe.cmmi
url = http://ftp.gnu.org/pub/gnu/gettext/gettext-0.17.tar.gz

[libpng]
recipe = hexagonit.recipe.cmmi
url = http://prdownloads.sourceforge.net/libpng/libpng-1.2.35.tar.gz
location = ${buildout:directory}/parts/libpng

[libtiff]
recipe = hexagonit.recipe.cmmi
url = ftp://ftp.remotesensing.org/pub/libtiff/tiff-3.8.2.tar.gz
location = ${buildout:directory}/parts/libtiff

[libjpeg]
recipe = plone.recipe.command
command =
    mkdir -p ${libjpeg:location}/bin
    mkdir -p ${libjpeg:location}/man/man1
    mkdir -p ${libjpeg:location}/include
    mkdir -p ${libjpeg:location}/lib
    cd ${buildout:directory}/tmp
    wget http://www.ijg.org/files/jpegsrc.v6b.tar.gz
    tar zxvf jpegsrc.v6b.tar.gz
    rm jpegsrc.v6b.tar.gz
    cd jpeg-6b
    ln -s `which glibtool` libtool
    ./configure --prefix=${libjpeg:location} --enable-shared
    make 
    make install
update-command = ${libjpeg:command}
location = ${buildout:directory}/parts/libjpeg

[pixman]
recipe = hexagonit.recipe.cmmi
url = http://cairographics.org/releases/pixman-0.15.2.tar.gz
location = ${buildout:directory}/parts/pixman

[expat]
recipe = hexagonit.recipe.cmmi
url = http://voxel.dl.sourceforge.net/sourceforge/expat/expat-2.0.1.tar.gz
location = ${buildout:directory}/parts/expat

[pkgconfig]
recipe = hexagonit.recipe.cmmi
url = http://pkgconfig.freedesktop.org/releases/pkg-config-0.23.tar.gz
location = ${buildout:directory}/parts/pkgconfig

[fontconfig]
#recipe = hexagonit.recipe.cmmi
recipe = zc.recipe.cmmi
url = http://fontconfig.org/release/fontconfig-2.6.0.tar.gz
location = ${buildout:directory}/parts/fontconfig
extra_options = 
    --with-expat=${expat:location}
#keep_compile_dir = true

[freetype]
recipe = hexagonit.recipe.cmmi
url = http://savannah.inetbridge.net/freetype/freetype-2.3.9.tar.gz
location = ${buildout:directory}/parts/freetype

[cairo]
recipe = zc.recipe.cmmi
url = http://cairographics.org/releases/cairo-1.8.6.tar.gz
environment =
    PKG_CONFIG=${pkgconfig:location}/bin/pkg-config
    PKG_CONFIG_PATH=${pixman:location}/lib/pkgconfig:${libpng:location}/lib/pkgconfig:${fontconfig:location}/lib/pkgconfig:${freetype:location}/lib/pkgconfig

[pango]
recipe = zc.recipe.cmmi
url = http://ftp.gnome.org/pub/GNOME/sources/pango/1.24/pango-1.24.1.tar.gz
environment = 
    PATH=${glib:location}/bin:${env:PATH}
    PKG_CONFIG=${pkgconfig:location}/bin/pkg-config
    PKG_CONFIG_PATH=${glib:location}/lib/pkgconfig:${cairo:location}/lib/pkgconfig:${pixman:location}/lib/pkgconfig:${libpng:location}/lib/pkgconfig:${fontconfig:location}/lib/pkgconfig:${freetype:location}/lib/pkgconfig

[rrdtool]
recipe = hexagonit.recipe.cmmi
url = http://oss.oetiker.ch/rrdtool/pub/rrdtool-1.3.7.tar.gz
keep-compile-dir = true
extra_options = 
    CPPFLAGS="-I${pango:location}/include/pango-1.0 -I${glib:location}/include/glib-2.0 -I${glib:location}/lib/glib-2.0/include/"
    LDFLAGS="-L${pango:location}/lib/ -lpangocairo-1.0"
    LD_LIBRARY_PATH="${pango:location}/lib"
    PATH=${pkgconfig:location}/bin:${env:PATH}
    PKG_CONFIG_PATH=${glib:location}/lib/pkgconfig:${cairo:location}/lib/pkgconfig:${pixman:location}/lib/pkgconfig:${libpng:location}/lib/pkgconfig:${pango:location}/lib/pkgconfig
    --enable-python

[rrdtool]
recipe = plone.recipe.command
location = 'n/a'
command =
    echo ${rrdtool:extra_options}

